# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

jobs:

- job: GetBearerToken
  steps:
  - powershell: |
      $apiUrl = "https://hotfix-docker.boldbi.com/bi/api/site/site1/token"  # URL to get bearer token
      $credentials = @{
          grant_type = "password"
          username = "admin"
          password = "Admin@123"
      }
      
      $tokenResponse = Invoke-RestMethod -Uri $apiUrl -Method Post -Body $credentials

      # Debugging line to inspect the authentication response
      Write-Host "Authentication Response: $($tokenResponse | ConvertTo-Json -Depth 10)"
      $bearerToken = $tokenResponse.access_token

      # Store the access token in a new variable
      $storedAccessToken = $bearerToken

      echo "$storedAccessToken"
      echo "##vso[task.setvariable variable=Bearertoken]$storedAccessToken"
    displayName: 'Get Bearer Token and Send POST Request'
     
  - powershell: |
      $apiEndpoint = "https://hotfix-docker.boldbi.com/bi/api/site/site1/v4.0/dashboards"  # API endpoint
      $bearerToken = "$(Bearertoken)"  # Access the pipeline variable
      echo "$(Bearertoken)"
      $headers = @{
          "Authorization" = "Bearer $bearerToken"
      }

      try {
          # Send the GET request using the bearer token
          $response = Invoke-RestMethod -Uri $apiEndpoint -Method Get -Headers $headers
          Write-Host "API Response: $($response | ConvertTo-Json -Depth 10)"
      } catch {
          Write-Host "Error: $($_.Exception.Message)"
      }
      # Initialize an array to store the IDs
      $idsArray = @()

      # Extract "Id" values from the response and add them to the array
      $response | ForEach-Object {
          $idsArray += $_.Id
      }
      $idsArrayJson = $idsArray | ConvertTo-Json -Depth 10
      Write-Host "##vso[task.setvariable variable=ExtractedIds;isOutput=true]$idsArrayJson"
      echo "$ExtractedIds"
    displayName: 'Call API with Bearer Token'


