# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
parameters:
- name: DashboardIDs
  displayName: Please enter the dashboard IDs (comma-separated). Enter "All" for all dashboards.
  type: string
  default: All
pool:
  vmImage: ubuntu-latest

jobs:

- job: GetBearerToken
  steps:
  - powershell: |
      $apiUrl = "https://hotfix-docker.boldbi.com/bi/api/site/site1/token"  # URL to get bearer token
      $credentials = @{
          grant_type = "password"
          username = "admin"
          password = "Admin@123"
      }
      
      $tokenResponse = Invoke-RestMethod -Uri $apiUrl -Method Post -Body $credentials

      # Debugging line to inspect the authentication response
      Write-Host "Authentication Response: $($tokenResponse | ConvertTo-Json -Depth 10)"
      $bearerToken = $tokenResponse.access_token

      # Store the access token in a new variable
      $storedAccessToken = $bearerToken

      echo "$storedAccessToken"
      echo "##vso[task.setvariable variable=Bearertoken]$storedAccessToken"
    displayName: 'Get Bearer Token and Send POST Request'
     
  - powershell: |
      $apiEndpoint = "https://hotfix-docker.boldbi.com/bi/api/site/site1/v4.0/dashboards"  # API endpoint
      $bearerToken = "$(Bearertoken)"  # Access the pipeline variable
      echo "$(Bearertoken)"
      $headers = @{
          "Authorization" = "Bearer $bearerToken"
      }

      try {
          # Send the GET request using the bearer token
          $response = Invoke-RestMethod -Uri $apiEndpoint -Method Get -Headers $headers
          Write-Host "API Response: $($response | ConvertTo-Json -Depth 10)"
      } catch {
          Write-Host "Error: $($_.Exception.Message)"
      }
      # Extract the "Id" values from the response
      $idsArray = @()
      foreach ($item in $response.Data) {
          $idsArray += $item.Id
      }

      # Display the extracted IDs
      Write-Host "Extracted IDs: $($idsArray -join ',')"

    displayName: 'Call API with Bearer Token'
 
  - powershell: |
      $apiUrl = "https://hotfix-docker.boldbi.com/bi/api/site/site1/v4.0/dashboards/download/job"  # API endpoint
      $bearerToken = "$(Bearertoken)"  # Access the pipeline variable

      $headers = @{
          "Authorization" = "Bearer $bearerToken"
          "Content-Type" = "application/json"
      }

      # Split the Dashboard IDs entered as a parameter
        $dashboardIdsArray = @()
        if (${{ parameters.DashboardIDs }} -ne "All") {
            $dashboardIdsArray = ${{ parameters.DashboardIDs }} -split ','
        }

      # Construct the request body with the Dashboard IDs
      $requestBody = @{
          "DashboardId" = $dashboardIdsArray
          "CanIncludeSensitiveInformation" = $true
      }

      # Convert the request body to JSON format
      $requestBodyJson = $requestBody | ConvertTo-Json -Depth 10

      # Send the POST request using the bearer token and request body
      $response = Invoke-RestMethod -Uri $apiUrl -Method Post -Headers $headers -Body $requestBodyJson

      # Display the response
      Write-Host "API Response: $($response | ConvertTo-Json -Depth 10)"
      # Extract the JobId from the response and store it in another variable
      $jobId = $response.Data.JobId

      Write-Host "Extracted JobId: $jobId"

    displayName: 'Send POST Request to API'

